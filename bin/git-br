#!/bin/bash

if ! which fzy > /dev/null 2>&1 ;then
	echo "fzy not found"
	exit
fi

set -e

is_force=false

while (( $# > 0 ))
do
    case "$1" in
        -f)
            is_force=true
            ;;
        -s|--sync)
            git fetch --prune --all
            git branch --merged \
                | grep -v '^*' \
                | xargs git branch -d
            exit $?
            ;;
    esac
    shift
done

branch="$(
git branch --color -a \
    | grep -v '*' \
    | sed -E 's/^ +//' \
    | fzy \
    | perl -pe 's/\e\[?.*?[\@-~]//g'
)"

if [[ -z $branch ]]; then
    exit 0
fi

is_already_branched() { git branch | grep -q "${branch##*/}" &>/dev/null; }

if [[ $branch =~ ^remotes ]]; then
    if is_already_branched; then
        # already exists
        if $is_force; then
            git checkout -q master
            git branch -D "${branch##*/}"
            git checkout -b "${branch##*/}" "${branch#*/}"
        else
            git checkout "${branch##*/}"
        fi
    else
        git checkout -b "${branch##*/}" "${branch#*/}"
    fi
else
    if is_already_branched; then
        git checkout "$branch"
    else
        git checkout -b "$branch"
    fi
fi
